[mypy]
# pip install --upgrade --no-cache-dir mypy
#   https://mypy.readthedocs.io/en/latest/config_file.html
python_version = 3.8

# Type check special-cased code for the given OS platform (defaults to sys.platform)
platform = linux

# https://mypy.readthedocs.io/en/stable/config_file.html#confval-mypy_path
# mypy_path =
# mypy_path = $MYPY_CONFIG_FILE_DIR/typings

# Silently ignore imports of missing modules
# ignore_missing_imports = True

# Type check the interior of functions without type annotations
check_untyped_defs = True

# How to treat imports (default normal)
# {normal,silent,skip,error}
follow_imports = silent

# Show column numbers in error messages
show_column_numbers = True

# Show error codes in error messages
show_error_codes = True

# Shows a short summary line after error messages.
error_summary = True

# Show absolute paths to files
# show_absolute_path = True

# Disallow defining functions without type annotations or with incomplete type annotations
# disallow_untyped_defs = True

# Disallow defining functions with incomplete type annotations
# disallow_incomplete_defs = True

# Warn about unused '[mypy-<pattern>]' config sections
warn_unused_configs = True

# Warn about returning values of type Any from non-Any typed functions
warn_return_any = True

# Warn about casting an expression to its inferred type
warn_redundant_casts = True

# Warn about unneeded '# type: ignore' comments
warn_unused_ignores = True

# Enable module cache
# incremental = True

# Store module cache info in the given folder in incremental mode (defaults to '.mypy_cache')
# cache_dir =

# Include fine-grained dependency information in the cache for the mypy daemon
# cache_fine_grained = True

# Regular expression to match file names, directory names or paths which mypy should ignore while recursively discovering files to check, e.g. --exclude '/setup\.py$'
# exclude =

# Use visually nicer output in error messages: Use soft word wrap, show source code snippets, and show error location markers
# NOTE: Do not set `pretty = True`since it messes up with vscode parser for error messages.
pretty = False

# colorize error messages
color_output = True

#
# Third party dependencies that don't have types.
#

# Some of them, taken from torch repo:
#       https://github.com/pytorch/pytorch/blob/6d45d7a6c331ddb856ac34a76bcd3613aa05185b/mypy.ini#L155-L259

[mypy-matplotlib.*]
ignore_missing_imports = True

[mypy-numpy.*]
ignore_missing_imports = True

[mypy-tqdm.*]
ignore_missing_imports = True

[mypy-setuptools.*]
ignore_missing_imports = True

[mypy-distutils.*]
ignore_missing_imports = True

[mypy-IPython.*]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[mypy-mypy.*]
ignore_missing_imports = True

[mypy-pandas.*]
ignore_missing_imports = True

[mypy-sklearn.*]
ignore_missing_imports = True

[mypy-statsmodels.*]
ignore_missing_imports = True

[mypy-seaborn.*]
ignore_missing_imports = True

[mypy-requests_cache.*]
ignore_missing_imports = True

[mypy-single_version.*]
ignore_missing_imports = True

[mypy-plotly.*]
ignore_missing_imports = True

# [mypy-.*]
# ignore_missing_imports = True
